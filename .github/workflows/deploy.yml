name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    #- name: Configure AWS credentials
    #  uses: aws-actions/configure-aws-credentials@v4
    #  with:
    #    aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }} # TODO: use github OIDC or something similar.
    #    aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
    #    aws-region: eu-central-1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build, tag and push app Docker image
      env:
        IMAGE_NAME: keremenci/bestiary-crud-api
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $IMAGE_NAME:$IMAGE_TAG .
        docker push $IMAGE_NAME:$IMAGE_TAG

    - name: SCP the compose yaml to EC2
      uses: appleboy/scp-action@v0.1.7
      with:
        host: ${{ secrets.EC2_HOST }}
        username: bestiary
        key: ${{ secrets.EC2_DEPLOYER_SSH_KEY }}
        source: "docker-compose.yml"
        target: "/home/bestiary"
        
    - name: SSH to EC2 and deploy
      env:
        IMAGE_NAME: keremenci/bestiary-crud-api
        IMAGE_TAG: ${{ github.sha }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      uses: appleboy/ssh-action@v1.0.3
      with:
        host: ${{ secrets.EC2_HOST }}
        username: bestiary
        key: ${{ secrets.EC2_DEPLOYER_SSH_KEY }}
        envs: IMAGE_TAG, POSTGRES_PASSWORD
        script_stop: true
        script: |
          docker compose config
          docker compose down
          docker compose up -d